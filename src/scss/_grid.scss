/* A "row" is a horizontal container, and a "col" is a vertical container. */
.row, .col {
  display: flex;
  flex-wrap: wrap;
}

.row { flex-direction: row;    }
.col { flex-direction: column; }

/* Rows and columns can optionally have gutters, which add a bit of margin
 * between cells. */
.row-gttrs { margin: 0 (-$gutter-size/2) 0 (-$gutter-size/2); }
.col-gttrs { margin: (-$gutter-size/2) 0 (-$gutter-size/2) 0; }

.row-gttrs > *[class*="cell-"] { padding: 0 $gutter-size/2 0 $gutter-size/2; }
.col-gttrs > *[class*="cell-"] { padding: $gutter-size/2 0 $gutter-size/2 0; }

/* Main-axis alignment. */
.row-jstfy-strt, .col-jstfy-strt { justify-content: flex-start;    }
.row-jstfy-end,  .col-jstfy-end  { justify-content: flex-end;      }
.row-jstfy-cntr, .col-jstfy-cntr { justify-content: center;        }
.row-jstfy-btwn, .col-jstfy-btwn { justify-content: space-between; }
.row-jstfy-arnd, .col-jstfy-arnd { justify-content: space-around;  }

/* Cross-axis alignment. */
.row-algn-strt,   .col-algn-strt   { align-items: flex-start; }
.row-algn-end,    .col-algn-end    { align-items: flex-end;   }
.row-algn-cntr,   .col-algn-cntr   { align-items: center;     }
.row-algn-strtch, .col-algn-strtch { align-items: stretch;    }
.row-algn-bsln,   .col-algn-bsln   { align-items: baseline;   }

/* Cell cross-axis alignment. */
.cell-algn-strt   { align-self: flex-start; }
.cell-algn-end    { align-self: flex-end;   }
.cell-algn-cntr   { align-self: center;     }
.cell-algn-strtch { align-self: stretch;    }
.cell-algn-bsln   { align-self: baseline;   }

/* Default percentage sizes (mobile first).  The default for any cell is
 * 100%, so if the user only specifies a lg size, then everything smaller
 * than lg will be 100% side. */
.row > *[class*="cell-"],
.col > *[class*="cell-"] {
  flex: 0 0 100%;
}

/* Cells in columns don't have breakpoints, so there is no prefix.  
 * This is the same as the "cells" mixing but for columns and minus
 * the prefix. */
.col > .cell { flex: 1; }
.col > .cell-1 { flex: 0 0 100%; }
@for $i from 1 through 11 {
  @for $j from $i+1 through 12 {
    .col > .cell-#{$i}_#{$j} {
      flex: 0 0 percentage($i/$j);
    }
  }
}

/* Helper mixin that prints row cell styles. */
@mixin cells($prefix) {
  /* Auto-sized cell. */
  .row > .cell-#{$prefix} { flex: 1; }

  /* Full width cell. */
  .row > .cell-#{$prefix}-1 { flex: 0 0 100%; }

  /* Percentage width cells. */
  @for $i from 1 through 11 {
    @for $j from $i+1 through 12 {
      .row > .cell-#{$prefix}-#{$i}_#{$j} {
        flex: 0 0 percentage($i/$j);
      }
    }
  }
}

@include cells("xs");

/* Percentage widths for larger devices. */
@media (min-width: 768px) {
  @include cells("sm");
}

@media (min-width: 992px) {
  @include cells("md");
}

@media (min-width: 1200px) {
  @include cells("lg");
}

